// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: protobuf/telemetry.proto

package protobuf

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GPS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *GPS) Reset() {
	*x = GPS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_telemetry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPS) ProtoMessage() {}

func (x *GPS) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_telemetry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPS.ProtoReflect.Descriptor instead.
func (*GPS) Descriptor() ([]byte, []int) {
	return file_protobuf_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *GPS) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GPS) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Telemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed              float64              `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Location           *GPS                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Altitude           float64              `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Bearing            float64              `protobuf:"fixed64,4,opt,name=bearing,proto3" json:"bearing,omitempty"`
	Acceleration       float64              `protobuf:"fixed64,5,opt,name=acceleration,proto3" json:"acceleration,omitempty"`
	BatteryLevel       int32                `protobuf:"varint,6,opt,name=battery_level,json=batteryLevel,proto3" json:"battery_level,omitempty"`
	BatteryTemperature int32                `protobuf:"varint,7,opt,name=battery_temperature,json=batteryTemperature,proto3" json:"battery_temperature,omitempty"`
	MotorTemperatures  []int32              `protobuf:"varint,8,rep,packed,name=motor_temperatures,json=motorTemperatures,proto3" json:"motor_temperatures,omitempty"`
	Errors             []int32              `protobuf:"varint,9,rep,packed,name=errors,proto3" json:"errors,omitempty"`
	TimeStamp          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	DroneId            int32                `protobuf:"varint,11,opt,name=drone_id,json=droneId,proto3" json:"drone_id,omitempty"`
}

func (x *Telemetry) Reset() {
	*x = Telemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_telemetry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Telemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Telemetry) ProtoMessage() {}

func (x *Telemetry) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_telemetry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Telemetry.ProtoReflect.Descriptor instead.
func (*Telemetry) Descriptor() ([]byte, []int) {
	return file_protobuf_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *Telemetry) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Telemetry) GetLocation() *GPS {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Telemetry) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *Telemetry) GetBearing() float64 {
	if x != nil {
		return x.Bearing
	}
	return 0
}

func (x *Telemetry) GetAcceleration() float64 {
	if x != nil {
		return x.Acceleration
	}
	return 0
}

func (x *Telemetry) GetBatteryLevel() int32 {
	if x != nil {
		return x.BatteryLevel
	}
	return 0
}

func (x *Telemetry) GetBatteryTemperature() int32 {
	if x != nil {
		return x.BatteryTemperature
	}
	return 0
}

func (x *Telemetry) GetMotorTemperatures() []int32 {
	if x != nil {
		return x.MotorTemperatures
	}
	return nil
}

func (x *Telemetry) GetErrors() []int32 {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Telemetry) GetTimeStamp() *timestamp.Timestamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *Telemetry) GetDroneId() int32 {
	if x != nil {
		return x.DroneId
	}
	return 0
}

type TelemetryDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telemetry *Telemetry `protobuf:"bytes,2,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
}

func (x *TelemetryDataRequest) Reset() {
	*x = TelemetryDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_telemetry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryDataRequest) ProtoMessage() {}

func (x *TelemetryDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_telemetry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryDataRequest.ProtoReflect.Descriptor instead.
func (*TelemetryDataRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_telemetry_proto_rawDescGZIP(), []int{2}
}

func (x *TelemetryDataRequest) GetTelemetry() *Telemetry {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

type TelemetryDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TelemetryDataResponse) Reset() {
	*x = TelemetryDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_telemetry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryDataResponse) ProtoMessage() {}

func (x *TelemetryDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_telemetry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryDataResponse.ProtoReflect.Descriptor instead.
func (*TelemetryDataResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_telemetry_proto_rawDescGZIP(), []int{3}
}

func (x *TelemetryDataResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_protobuf_telemetry_proto protoreflect.FileDescriptor

var file_protobuf_telemetry_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x03, 0x47,
	0x50, 0x53, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x9f, 0x03, 0x0a,
	0x09, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x50, 0x53, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x62, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2f, 0x0a, 0x13, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x62,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x6d,
	0x6f, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x4f,
	0x0a, 0x14, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22,
	0x2f, 0x0a, 0x15, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0x76, 0x0a, 0x10, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_telemetry_proto_rawDescOnce sync.Once
	file_protobuf_telemetry_proto_rawDescData = file_protobuf_telemetry_proto_rawDesc
)

func file_protobuf_telemetry_proto_rawDescGZIP() []byte {
	file_protobuf_telemetry_proto_rawDescOnce.Do(func() {
		file_protobuf_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_telemetry_proto_rawDescData)
	})
	return file_protobuf_telemetry_proto_rawDescData
}

var file_protobuf_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protobuf_telemetry_proto_goTypes = []interface{}{
	(*GPS)(nil),                   // 0: telemetry_grpc.GPS
	(*Telemetry)(nil),             // 1: telemetry_grpc.Telemetry
	(*TelemetryDataRequest)(nil),  // 2: telemetry_grpc.TelemetryDataRequest
	(*TelemetryDataResponse)(nil), // 3: telemetry_grpc.TelemetryDataResponse
	(*timestamp.Timestamp)(nil),   // 4: google.protobuf.Timestamp
}
var file_protobuf_telemetry_proto_depIdxs = []int32{
	0, // 0: telemetry_grpc.Telemetry.location:type_name -> telemetry_grpc.GPS
	4, // 1: telemetry_grpc.Telemetry.time_stamp:type_name -> google.protobuf.Timestamp
	1, // 2: telemetry_grpc.TelemetryDataRequest.telemetry:type_name -> telemetry_grpc.Telemetry
	2, // 3: telemetry_grpc.TelemetryService.TelemetryStream:input_type -> telemetry_grpc.TelemetryDataRequest
	3, // 4: telemetry_grpc.TelemetryService.TelemetryStream:output_type -> telemetry_grpc.TelemetryDataResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protobuf_telemetry_proto_init() }
func file_protobuf_telemetry_proto_init() {
	if File_protobuf_telemetry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_telemetry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_telemetry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Telemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_telemetry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_telemetry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_telemetry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_telemetry_proto_goTypes,
		DependencyIndexes: file_protobuf_telemetry_proto_depIdxs,
		MessageInfos:      file_protobuf_telemetry_proto_msgTypes,
	}.Build()
	File_protobuf_telemetry_proto = out.File
	file_protobuf_telemetry_proto_rawDesc = nil
	file_protobuf_telemetry_proto_goTypes = nil
	file_protobuf_telemetry_proto_depIdxs = nil
}
